#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <unistd.h>
#include <pthread.h>
#include <sys/socket.h>
#include <arpa/inet.h>

#define PORT 8080

int server_socket;

void sig_handler(int signo) {
    if (signo == SIGHUP) {
        printf("Received SIGHUP signal\n");
    }
}

void *connection_handler(void *socket_desc) {
    int new_socket = *(int *)socket_desc;
    char buffer[1024] = {0};
    int valread;
    
    printf("New connection accepted\n");

    while ((valread = read(new_socket, buffer, 1024)) > 0) {
        printf("Received data: %d bytes\n", valread);
    }

    close(new_socket);
    return NULL;
}

int main() {
    struct sockaddr_in address;
    int addrlen = sizeof(address);

    if ((server_socket = socket(AF_INET, SOCK_STREAM, 0)) == 0) {
        perror("Socket failed");
        exit(EXIT_FAILURE);
    }

    address.sin_family = AF_INET;
    address.sin_addr.s_addr = INADDR_ANY;
    address.sin_port = htons(PORT);

    if (bind(server_socket, (struct sockaddr *)&address, sizeof(address)) < 0) {
        perror("Bind failed");
        exit(EXIT_FAILURE);
    }

    if (listen(server_socket, 3) < 0) {
        perror("Listen failed");
        exit(EXIT_FAILURE);
    }

    signal(SIGHUP, sig_handler);

    while (1) {
        int new_socket;
        pthread_t thread_id;

        if ((new_socket = accept(server_socket, (struct sockaddr *)&address, (socklen_t *)&addrlen)) < 0) {
            perror("Accept failed");
            continue;
        }

        pthread_create(&thread_id, NULL, connection_handler, (void *)&new_socket);
        pthread_detach(thread_id);
    }

    close(server_socket);

    return 0;
}
